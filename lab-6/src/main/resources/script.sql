CREATE TABLE IF NOT EXISTS ALBUM(
    ID SERIAL PRIMARY KEY,
    NAME varchar(128) NOT NULL,
    GENRE varchar(256),
    ARTIST_ID INTEGER NOT NULL,
    CONSTRAINT ARTIST_ID_FK FOREIGN KEY (ARTIST_ID) REFERENCES ARTIST (ID)
);

CREATE TABLE IF NOT EXISTS ARTIST(
    ID SERIAL PRIMARY KEY,
    NAME varchar(128) NOT NULL
);

CREATE TABLE IF NOT EXISTS COMPOSITION(
    ID SERIAL PRIMARY KEY,
    NAME varchar(128) NOT NULL,
    DURATION TIME NOT NULL,
    ALBUM_ID INTEGER NOT NULL,
    CONSTRAINT ALBUM_ID_FK FOREIGN KEY (ALBUM_ID) REFERENCES ALBUM (ID)
);

INSERT INTO  ARTIST(NAME) VALUES ('M. Jackson');
INSERT INTO  ARTIST(NAME) VALUES ('50$');
INSERT INTO  ARTIST(NAME) VALUES ('Sam');

INSERT INTO  COMPOSITION(NAME, DURATION, ALBUM_ID) VALUES ('50$ initial', '2:23', 1);
INSERT INTO  COMPOSITION(NAME, DURATION, ALBUM_ID) VALUES ('simple hand', '0:2:21', 2);
INSERT INTO  COMPOSITION(NAME, DURATION, ALBUM_ID) VALUES ('sample track', '0:3:01', 3);
INSERT INTO  COMPOSITION(NAME, DURATION, ALBUM_ID) VALUES ('50$ initial', '0:4:05', 4);

INSERT INTO  ALBUM(NAME, GENRE, ARTIST_ID) VALUES ('50$s', 'rap', 4);
INSERT INTO  ALBUM(NAME, GENRE, ARTIST_ID) VALUES ('not time to die', 'pop', 1);
INSERT INTO  ALBUM(NAME, GENRE, ARTIST_ID) VALUES ('test a', 'pop', 2);
INSERT INTO  ALBUM(NAME, GENRE, ARTIST_ID) VALUES ('sample', 'rock', 3);
INSERT INTO  ALBUM(NAME, GENRE, ARTIST_ID) VALUES ('stars in heaven', 'pop', 4);

select ALBUM.name, MIN(COMPOSITION.duration)
    from ALBUM
    JOIN COMPOSITION ON composition.album_id = album.id
    GROUP BY ALBUM.id
    HAVING count(COMPOSITION.NAME) >= 5;